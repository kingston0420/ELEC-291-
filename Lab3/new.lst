                 -1   $MODLP51
0000              1   ;--------------------------------------------------------
0000              2   ; Special Function Registers
0000              3   ;--------------------------------------------------------
0000              4   ACC            DATA 0xe0
0000              5   B              DATA 0xf0
0000              6   PSW            DATA 0xd0
0000              7   SP             DATA 0x81
0000              8   SPX            DATA 0xef
0000              9   DPL            DATA 0x82
0000             10   DPH            DATA 0x83
0000             11   DPLB           DATA 0xd4
0000             12   DPHB           DATA 0xd5
0000             13   PAGE           DATA 0xf6
0000             14   AX             DATA 0xe1
0000             15   BX             DATA 0xf7
0000             16   DSPR           DATA 0xe2
0000             17   FIRD           DATA 0xe3
0000             18   MACL           DATA 0xe4
0000             19   MACH           DATA 0xe5
0000             20   PCON           DATA 0x87
0000             21   AUXR           DATA 0x8e
0000             22   AUXR1          DATA 0xa2
0000             23   DPCF           DATA 0xa1
0000             24   CKRL           DATA 0x97
0000             25   CKCKON0        DATA 0x8f
0000             26   CKCKON1        DATA 0xaf
0000             27   CKSEL          DATA 0x85
0000             28   CLKREG         DATA 0xae
0000             29   OSCCON         DATA 0x85
0000             30   IE             DATA 0xa8
0000             31   IEN0           DATA 0xa8
0000             32   IEN1           DATA 0xb1
0000             33   IPH0           DATA 0xb7
0000             34   IP             DATA 0xb8
0000             35   IPL0           DATA 0xb8
0000             36   IPH1           DATA 0xb3
0000             37   IPL1           DATA 0xb2
0000             38   P0             DATA 0x80
0000             39   P1             DATA 0x90
0000             40   P2             DATA 0xa0
0000             41   P3             DATA 0xb0
0000             42   P4             DATA 0xc0
0000             43   P0M0           DATA 0xe6
0000             44   P0M1           DATA 0xe7
0000             45   P1M0           DATA 0xd6
0000             46   P1M1           DATA 0xd7
0000             47   P2M0           DATA 0xce
0000             48   P2M1           DATA 0xcf
0000             49   P3M0           DATA 0xc6
0000             50   P3M1           DATA 0xc7
0000             51   P4M0           DATA 0xbe
0000             52   P4M1           DATA 0xbf
0000             53   SCON           DATA 0x98
0000             54   SBUF           DATA 0x99
0000             55   SADEN          DATA 0xb9
0000             56   SADDR          DATA 0xa9
0000             57   BDRCON         DATA 0x9b
0000             58   BRL            DATA 0x9a
0000             59   TCON           DATA 0x88
0000             60   TMOD           DATA 0x89
0000             61   TCONB          DATA 0x91
0000             62   TL0            DATA 0x8a
0000             63   TH0            DATA 0x8c
0000             64   TL1            DATA 0x8b
0000             65   TH1            DATA 0x8d
0000             66   RL0            DATA 0xf2
0000             67   RL1            DATA 0xf3
0000             68   RH0            DATA 0xf4
0000             69   RH1            DATA 0xf5
0000             70   WDTRST         DATA 0xa6
0000             71   WDTPRG         DATA 0xa7
0000             72   T2CON          DATA 0xc8
0000             73   T2MOD          DATA 0xc9
0000             74   RCAP2H         DATA 0xcb
0000             75   RCAP2L         DATA 0xca
0000             76   TH2            DATA 0xcd
0000             77   TL2            DATA 0xcc
0000             78   SPCON          DATA 0xc3
0000             79   SPSTA          DATA 0xc4
0000             80   SPDAT          DATA 0xc5
0000             81   SSCON          DATA 0x93
0000             82   SSCS           DATA 0x94
0000             83   SSDAT          DATA 0x95
0000             84   SSADR          DATA 0x96
0000             85   KBLS           DATA 0x9c
0000             86   KBE            DATA 0x9d
0000             87   KBF            DATA 0x9e
0000             88   KBMOD          DATA 0x9f
0000             89   BMSEL          DATA 0x92
0000             90   FCON           DATA 0xd2
0000             91   EECON          DATA 0xd2
0000             92   ACSRA          DATA 0xa3
0000             93   ACSRB          DATA 0xab
0000             94   AREF           DATA 0xbd
0000             95   DADC           DATA 0xa4
0000             96   DADI           DATA 0xa5
0000             97   DADL           DATA 0xac
0000             98   DADH           DATA 0xad
0000             99   CCON           DATA 0xd8
0000            100   CMOD           DATA 0xd9
0000            101   CL             DATA 0xe9
0000            102   CH             DATA 0xf9
0000            103   CCAPM0         DATA 0xda
0000            104   CCAPM1         DATA 0xdb
0000            105   CCAPM2         DATA 0xdc
0000            106   CCAPM3         DATA 0xdd
0000            107   CCAPM4         DATA 0xde
0000            108   CCAP0H         DATA 0xfa
0000            109   CCAP1H         DATA 0xfb
0000            110   CCAP2H         DATA 0xfc
0000            111   CCAP3H         DATA 0xfd
0000            112   CCAP4H         DATA 0xfe
0000            113   CCAP0L         DATA 0xea
0000            114   CCAP1L         DATA 0xeb
0000            115   CCAP2L         DATA 0xec
0000            116   CCAP3L         DATA 0xed
0000            117   CCAP4L         DATA 0xee
0000            118   ;--------------------------------------------------------
0000            119   ; special function bits
0000            120   ;--------------------------------------------------------
0000            121   P              BIT 0xd0
0000            122   F1             BIT 0xd1
0000            123   OV             BIT 0xd2
0000            124   RS0            BIT 0xd3
0000            125   RS1            BIT 0xd4
0000            126   F0             BIT 0xd5
0000            127   AC             BIT 0xd6
0000            128   CY             BIT 0xd7
0000            129   EX0            BIT 0xa8
0000            130   ET0            BIT 0xa9
0000            131   EX1            BIT 0xaa
0000            132   ET1            BIT 0xab
0000            133   ES             BIT 0xac
0000            134   ET2            BIT 0xad
0000            135   EC             BIT 0xae
0000            136   EA             BIT 0xaf
0000            137   PX0            BIT 0xb8
0000            138   PT0            BIT 0xb9
0000            139   PX1            BIT 0xba
0000            140   PT1            BIT 0xbb
0000            141   PS             BIT 0xbc
0000            142   PT2            BIT 0xbd
0000            143   IP0D           BIT 0xbf
0000            144   PPCL           BIT 0xbe
0000            145   PT2L           BIT 0xbd
0000            146   PLS            BIT 0xbc
0000            147   PT1L           BIT 0xbb
0000            148   PX1L           BIT 0xba
0000            149   PT0L           BIT 0xb9
0000            150   PX0L           BIT 0xb8
0000            151   RXD            BIT 0xb0
0000            152   TXD            BIT 0xb1
0000            153   INT0           BIT 0xb2
0000            154   INT1           BIT 0xb3
0000            155   T0             BIT 0xb4
0000            156   T1             BIT 0xb5
0000            157   WR             BIT 0xb6
0000            158   RD             BIT 0xb7
0000            159   RI             BIT 0x98
0000            160   TI             BIT 0x99
0000            161   RB8            BIT 0x9a
0000            162   TB8            BIT 0x9b
0000            163   REN            BIT 0x9c
0000            164   SM2            BIT 0x9d
0000            165   SM1            BIT 0x9e
0000            166   SM0            BIT 0x9f
0000            167   IT0            BIT 0x88
0000            168   IE0            BIT 0x89
0000            169   IT1            BIT 0x8a
0000            170   IE1            BIT 0x8b
0000            171   TR0            BIT 0x8c
0000            172   TF0            BIT 0x8d
0000            173   TR1            BIT 0x8e
0000            174   TF1            BIT 0x8f
0000            175   CP_RL2         BIT 0xc8
0000            176   C_T2           BIT 0xc9
0000            177   TR2            BIT 0xca
0000            178   EXEN2          BIT 0xcb
0000            179   TCLK           BIT 0xcc
0000            180   RCLK           BIT 0xcd
0000            181   EXF2           BIT 0xce
0000            182   TF2            BIT 0xcf
0000            183   CF             BIT 0xdf
0000            184   CR             BIT 0xde
0000            185   CCF4           BIT 0xdc
0000            186   CCF3           BIT 0xdb
0000            187   CCF2           BIT 0xda
0000            188   CCF1           BIT 0xd9
0000            189   CCF0           BIT 0xd8
0000              2   org 0000H
0000 0203C6       3      ljmp MainProgram
0003              4   
0003              5   
0030              6   dseg at 0x30
0030              7   volt_BCD:   ds 1
0031              8   x:   ds 4
0035              9   y:   ds 4
0039             10   bcd: ds 5
003E             11   Result: ds 2
0040             12   
0040             13   
0000             14   BSEG
0000             15   mf: dbit 1
0001             16   
                546   $LIST
                 18   $LIST
0273             20   
0273             21   ; These 'equ' must match the hardware wiring
0273             22   ; They are used by 'LCD_4bit.inc'
0273             23   LCD_RS equ P1.1
0273             24   LCD_RW equ P1.2
0273             25   LCD_E  equ P1.3
0273             26   LCD_D4 equ P3.2
0273             27   LCD_D5 equ P3.3
0273             28   LCD_D6 equ P3.4
0273             29   LCD_D7 equ P3.5
0273             30   
0273             31   CLK  EQU 22118400
0273             32   BAUD equ 115200
0273             33   BRG_VAL equ (0x100-(CLK/(16*BAUD)))
0273             34   ; These EQU  must match the wiring between the microcontroller and ADC
0273             35   CE_ADC EQU P2.0
0273             36   MY_MOSI EQU P2.1
0273             37   MY_MISO EQU P2.2
0273             38   MY_SCLK EQU P2.3
0273             39   
                 41   	$LIST
0321             43   
0321 74656D70    44   temp:  db 'temperature: xxC','\r', '\n', 0
     65726174
     7572653A
     20787843
     0D0A00
0334 0D0A00      45   Spacer:  db '\r','\n', 0
0337             46   
0337             47   CSEG
0337             48   ; Configure the serial port and baud rate
0337             49   InitSerialPort:
0337             50       ; Since the reset button bounces, we need to wait a bit before
0337             51       ; sending messages, otherwise we risk displaying gibberish!
0337 79DE        52       mov R1, #222
0339 78A6        53       mov R0, #166
033B D8FE        54       djnz R0, $   ; 3 cycles->3*45.21123ns*166=22.51519us
033D D9FA        55       djnz R1, $-4 ; 22.51519us*222=4.998ms
033F             56       ; Now we can proceed with the configuration
033F 438780      57            orl     PCON,#0x80
0342 759852      58            mov     SCON,#0x52
0345 759B00      59            mov     BDRCON,#0x00
0348 759AF4      60            mov     BRL,#BRG_VAL
034B 759B1E      61            mov     BDRCON,#0x1E ; BDRCON=BRR|TBCK|RBCK|SPD;
034E 22          62       ret
034F             63   
034F             64   ; Send a character using the serial port
034F             65   putchar:
034F 3099FD      66       jnb TI, putchar
0352 C299        67       clr TI
0354 F599        68       mov SBUF, a
0356 22          69       ret
0357             70   
0357             71   ; Send a constant-zero-terminated string using the serial port
0357             72   SendString:
0357 E4          73       clr A
0358 93          74       movc A, @A+DPTR
0359 6006        75       jz SendStringDone
035B 12034F      76       lcall putchar
035E A3          77       inc DPTR
035F 80F6        78       sjmp SendString
0361             79   SendStringDone:
0361 22          80       ret
0362             81       
                 82   Send_BCD mac
                 83   	push ar0
                 84   	mov r0, %0
                 85   	lcall ?Send_BCD
                 86   	pop ar0
                 87   endmac
0362             88       
0362             89   ?Send_BCD:
0362 C0E0        90            push acc
0364             91            ; Write most significant digit
0364 E8          92            mov a, r0
0365 C4          93            swap a
0366 540F        94            anl a, #0fh
0368 4430        95            orl a, #30h
036A 12034F      96            lcall putchar
036D             97            ; write least significant digit
036D E8          98            mov a, r0
036E 540F        99            anl a, #0fh
0370 4430       100            orl a, #30h
0372 12034F     101            lcall putchar
0375 D0E0       102            pop acc
0377 22         103            ret
0378            104            
0378            105            
0378            106   Hello_World:
0378 48656C6C   107       DB  'Hello, World!', '\r', '\n', 0
     6F2C2057
     6F726C64
     210D0A00
0388            108   
0388            109   INIT_SPI:
0388 D2A2       110            setb MY_MISO ; Make MISO an input pin
038A C2A3       111            clr MY_SCLK ; For mode (0,0) SCLK is zero
038C 22         112            ret
038D            113   
038D            114   DO_SPI_G:
038D C0E0       115            push acc
038F 7900       116            mov R1, #0 ; Received byte stored in R1
0391 7A08       117            mov R2, #8 ; Loop counter (8-bits)
0393            118   DO_SPI_G_LOOP:
0393 E8         119            mov a, R0 ; Byte to write is in R0
0394 33         120            rlc a ; Carry flag has bit to write
0395 F8         121            mov R0, a
0396 92A1       122            mov MY_MOSI, c
0398 D2A3       123            setb MY_SCLK ; Transmit
039A A2A2       124            mov c, MY_MISO ; Read received bit
039C E9         125            mov a, R1 ; Save received bit in R1
039D 33         126            rlc a
039E F9         127            mov R1, a
039F C2A3       128            clr MY_SCLK
03A1 DAF0       129            djnz R2, DO_SPI_G_LOOP
03A3 D0E0       130            pop acc
03A5 22         131            ret
03A6            132   
                133   Read_ADC_Channel MAC
                134   	mov b, #%0
                135   	lcall _Read_ADC_Channel
                136   ENDMAC
03A6            137   
03A6            138   _Read_ADC_Channel:
03A6 C2A0       139            clr CE_ADC
03A8 7801       140            mov R0, #00000001B ; Start bit:1
03AA 12038D     141            lcall DO_SPI_G
03AD E5F0       142            mov a, b
03AF C4         143            swap a
03B0 54F0       144            anl a, #0F0H
03B2 D2E7       145            setb acc.7 ; Single mode (bit 7).
03B4 F8         146            mov R0, a
03B5 12038D     147            lcall DO_SPI_G
03B8 E9         148            mov a, R1 ; R1 contains bits 8 and 9
03B9 5403       149            anl a, #00000011B ; We need only the two least significant bits
03BB FF         150            mov R7, a ; Save result high.
03BC 7855       151            mov R0, #55H ; It doesn't matter what we transmit...
03BE 12038D     152            lcall DO_SPI_G
03C1 E9         153            mov a, r1
03C2 FE         154            mov r6, a ; R1 contains bits 0 to 7. Save result low.
03C3 D2A0       155            setb CE_ADC
03C5 22         156            ret
03C6            157   
03C6            158   
03C6            159   
03C6            160   MainProgram:
03C6 D2A0       161       setb CE_ADC  
03C8 75817F     162       mov SP, #7FH ; Set the stack pointer to the begining of idata
03CB 75C700     163       mov P3M1, #0 
03CE 75CF00     164       mov P2M1, #0 
03D1            165       
03D1 120337     166       lcall InitSerialPort
03D4 120388     167       lcall INIT_SPI
03D7 1202CD     168       lcall LCD_4BIT
03DA            169            
03DA C0E0       170            push acc
03DC 7401       170            mov a, #1
03DE 14         170            dec a
03DF 120306     170            lcall ?Set_Cursor_1 ; Select column and row
03E2 D0E0       170            pop acc 
03E4 C083       171            push dph
03E6 C082       171            push dpl
03E8 C0E0       171            push acc
03EA 900321     171            mov dptr, #temp
03ED 1202F9     171            lcall ?Send_Constant_String
03F0 D0E0       171            pop acc
03F2 D082       171            pop dpl
03F4 D083       171            pop dph  
03F6            172    
03F6            173   loop: 
03F6 75F000     174            mov b, #0
03F9 1203A6     174            lcall _Read_ADC_Channel
03FC 8E31       175            mov x, R6
03FE 8F32       176            mov x+1, R7
0400 753500     177            mov y+0, #low (4096 % 0x10000) 
0403 753610     177            mov y+1, #high(4096 % 0x10000) 
0406 753700     177            mov y+2, #low (4096 / 0x10000) 
0409 753800     177            mov y+3, #high(4096 / 0x10000) 
040C 12017D     178       lcall mul32
040F 7535F6     179            mov y+0, #low (10230 % 0x10000) 
0412 753627     179            mov y+1, #high(10230 % 0x10000) 
0415 753700     179            mov y+2, #low (10230 / 0x10000) 
0418 753800     179            mov y+3, #high(10230 / 0x10000) 
041B 12020A     180       lcall div32 
041E 753511     181            mov y+0, #low (273 % 0x10000) 
0421 753601     181            mov y+1, #high(273 % 0x10000) 
0424 753700     181            mov y+2, #low (273 / 0x10000) 
0427 753800     181            mov y+3, #high(273 / 0x10000) 
042A 1200E9     182       lcall sub32
042D 120003     183       lcall hex2bcd
0430 E539       184            mov a, bcd
0432            185            
0432            186            
0432 C000       187            push ar0
0434 A839       187            mov r0, bcd
0436 120362     187            lcall ?Send_BCD
0439 D000       187            pop ar0
043B C0E0       188            push acc
043D 740E       188            mov a, #14
043F 14         188            dec a
0440 120306     188            lcall ?Set_Cursor_1 ; Select column and row
0443 D0E0       188            pop acc
0445 C000       189            push ar0
0447 A839       189            mov r0, bcd
0449 12030B     189            lcall ?Display_BCD
044C D000       189            pop ar0   
044E            190       
044E E539       191       mov a, bcd
0450            192       ;Send_BCD(a);uhu
0450 900334     193            mov DPTR, #Spacer
0453 120357     194            lcall SendString;juihu
0456 9430       195       subb a, #0x30
0458 403A       196       jc toohot
045A D2B7       197       setb P3.7
045C            198   loop2:  
045C E539       199            mov a, bcd  
045E 9427       200       subb a, #0x27
0460 5037       201       jnc toocold 
0462 D2A7       202       setb P2.7
0464            203      
0464            204      
0464            205   loop3:    
0464 C002       206            push AR2
0466 7A32       206            mov R2, #50
0468 12027E     206            lcall ?Wait_Milli_Seconds
046B D002       206            pop AR2
046D C002       207            push AR2
046F 7A32       207            mov R2, #50
0471 12027E     207            lcall ?Wait_Milli_Seconds
0474 D002       207            pop AR2
0476 C002       208            push AR2
0478 7A32       208            mov R2, #50
047A 12027E     208            lcall ?Wait_Milli_Seconds
047D D002       208            pop AR2
047F C002       209            push AR2
0481 7A32       209            mov R2, #50
0483 12027E     209            lcall ?Wait_Milli_Seconds
0486 D002       209            pop AR2
0488 C002       210            push AR2
048A 7A32       210            mov R2, #50
048C 12027E     210            lcall ?Wait_Milli_Seconds
048F D002       210            pop AR2
0491            211        
0491 0203F6     212       ljmp loop 
0494            213       
0494            214   toohot: 
0494 C2B7       215            clr P3.7
0496 02045C     216            ljmp loop2
0499            217            
0499            218   toocold: 
0499 C2A7       219            clr P2.7    
049B 020464     220       ljmp loop3
049E            221      
049E            222   END
